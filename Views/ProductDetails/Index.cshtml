@model UsersApp.ViewModels.ProductDetailsViewModel

@{
    ViewBag.Title = "Product Details";
}
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
<section class="py-5">
    <div class="container">

        <div class="row align-items-center">
            <div class="col-md-6">
                <h1 class="display-5 fw-bold">@Model.Product.Name</h1>
                <p class="text-muted">@Model.Product.Brand • @Model.Product.Category</p>
                <h3 class="text-success">@Model.Product.Price.ToString("C")</h3>
                <p class="lead mt-3">@Model.Product.Description</p>
                <a href="@Url.Action("Index", "Store")" class="btn btn-outline-secondary mt-3">
                    <i class="bi bi-arrow-left"></i> Back to Products
                </a>
                @if (Model.Product.Quantity > 0)
                {
                    <a asp-controller="Order" asp-action="Checkout" asp-route-productId="@Model.Product.Id"
                       class="btn btn-outline-secondary mt-3">
                        Buy Now
                    </a>
                }
                else
                {
                    <button class="btn btn-secondary mt-3" disabled>Out of Stock</button>
                }
                <button class="favorite-btn btn btn-light border-0 p-2 mt-3" id="favorite-btn-@Model.Product.Id"
                        data-product-id="@Model.Product.Id" title="Add to Favorites">
                    <i class="fas fa-heart text-secondary fs-4"></i>
                </button>


            </div>
            <div class="col-md-6 text-center">
                @if (!string.IsNullOrEmpty(Model.Product.ImageFileName))
                {
                    <img src="@Url.Content("~/products/" + Model.Product.ImageFileName)" alt="@Model.Product.Name" class="img-fluid rounded shadow" />
                }
            </div>
        </div>

        <hr class="my-5" />

        <div class="row">
            <div class="col-12">
                <h2 class="mb-4">Customer Reviews</h2>
            </div>
            <div class="col-12">
                @if (Model.Reviews != null && Model.Reviews.Any())
                {
                    <div class="list-group">
                        @foreach (var review in Model.Reviews)
                        {
                            <div class="list-group-item list-group-item-action mb-2">
                                <div class="d-flex w-100 justify-content-between">
                                    <h5 class="mb-1">@review.Author</h5>
                                    <small class="text-muted">@review.CreatedAt.ToString("g")</small>
                                </div>
                                <div class="mb-2">
                                    @for (int i = 1; i <= 5; i++)
                                    {
                                        if (i <= review.Rating)
                                        {
                                            <i class="bi bi-star-fill text-warning"></i>
                                        }
                                        else
                                        {
                                            <i class="bi bi-star text-secondary"></i>
                                        }
                                    }
                                    <span class="ms-2">(@review.Rating/5)</span>
                                </div>
                                <p class="mb-1">@review.Content</p>
                            </div>
                        }
                    </div>
                }
                else
                {
                    <p class="text-muted">No reviews yet. Be the first to review this product.</p>
                }
            </div>
        </div>

        <div class="row mt-5">
            <div class="col-12">
                <div class="card shadow-sm">
                    <div class="card-header bg-primary text-white">
                        <h4 class="mb-0">Write a Review</h4>
                    </div>
                    <div class="card-body">
                        <form asp-action="SubmitReview" method="post">
                            <input type="hidden" name="ProductId" value="@Model.Product.Id" />
                            <div class="mb-3">
                                <label for="username" class="form-label">Your Name</label>
                                <input type="text" name="Author" class="form-control" id="username" required placeholder="Enter your name" />
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Your Rating</label>
                                <div class="rating">
                                    @for (int i = 1; i <= 5; i++)
                                    {
                                        <input type="radio" id="star-@i" name="Rating" value="@i" class="d-none">
                                        <label for="star-@i" class="star">&#9733;</label>
                                    }
                                </div>
                                <p class="selected-rating mt-2">Selected Rating: <span id="selected-rating">0</span>/5</p>
                            </div>
                            <div class="mb-3">
                                <label for="content" class="form-label">Your Review</label>
                                <textarea name="Content" class="form-control" id="content" rows="4" placeholder="Share your thoughts..." required></textarea>
                            </div>
                            <button type="submit" class="btn btn-success">Submit Review</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
        <hr class="my-5" />

        <div class="row">
            <div class="col-12">
                <h2 class="mb-4">You May Also Like</h2>
            </div>

            @if (Model.RelatedProducts != null && Model.RelatedProducts.Any())
            {
                <div class="row">
                    @foreach (var relatedProduct in Model.RelatedProducts)
                    {
                        <div class="col-md-3 col-sm-6 mb-4">
                            <div class="card shadow-sm h-100">
                                <img src="@Url.Content("~/products/" + relatedProduct.ImageFileName)" class="card-img-top" alt="@relatedProduct.Name">
                                <div class="card-body d-flex flex-column text-center">
                                    <h5 class="card-title">@relatedProduct.Name</h5>
                                    <p class="text-success">@relatedProduct.Price.ToString("C")</p>
                                    <div class="mt-auto">
                                        <a asp-controller="ProductDetails" asp-action="Index" asp-route-id="@relatedProduct.Id"
                                           class="btn btn-outline-secondary btn-sm">
                                            <i class="fas fa-info-circle"></i> Details
                                        </a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            }
            else
            {
                <p class="text-muted">No related products found.</p>
            }
        </div>

       
<div id="toast-notification" class="toast align-items-center text-white bg-success border-0 position-fixed bottom-0 end-0 m-3" role="alert" aria-live="assertive" aria-atomic="true">
    <div class="d-flex">
        <div class="toast-body">Product added to Favorites!</div>
        <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
    </div>
</div>


    </div>
</section>

<style>
    .star {
        font-size: 24px;
        cursor: pointer;
        color: gray;
    }
    input[type="radio"]:checked + .star,
    .star.selected {
        color: gold;
    }

    .card {
        height: 100%;
        display: flex;
        flex-direction: column;
    }

        .card img {
            height: 200px; 
            object-fit: cover; 
        }

    .card-body {
        flex-grow: 1;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
    }

    .card .btn {
        width: 100%; 
    }
</style>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const stars = document.querySelectorAll(".rating .star");
        const ratingDisplay = document.getElementById("selected-rating");

        stars.forEach(star => {
            star.addEventListener("click", function () {
                let value = this.previousElementSibling.value;
                ratingDisplay.textContent = value;
                stars.forEach(s => s.classList.remove("selected"));
                for (let i = 0; i < value; i++) {
                    stars[i].classList.add("selected");
                }
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        let button = document.getElementById("favorite-btn-@Model.Product.Id");
        let icon = button.querySelector("i");
        let productId = button.getAttribute("data-product-id");

        fetch(`/Favorites/IsFavorite/${productId}`)
            .then(response => response.json())
            .then(data => {
                if (data.isFavorite) {
                    icon.classList.remove("text-secondary", "text-danger");
                    icon.classList.add("text-success");
                    button.setAttribute("disabled", "true");
                    button.setAttribute("title", "Already in Favorites");
                } else {
                    icon.classList.remove("text-secondary");
                    icon.classList.add("text-danger");
                    button.setAttribute("title", "Add to Favorites");
                }
            });

        button.addEventListener("click", function () {
            fetch(`/Favorites/AddToFavorites`, {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ productId: parseInt(productId) })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    icon.classList.remove("text-danger");
                    icon.classList.add("text-success");
                    button.setAttribute("disabled", "true");
                    button.setAttribute("title", "Already in Favorites");

                    let toast = new bootstrap.Toast(document.getElementById('toast-notification'));
                    toast.show();
                } else {
                    alert(data.message);
                }
            })
            .catch(error => console.error("Error:", error));
        });
    });
</script>

