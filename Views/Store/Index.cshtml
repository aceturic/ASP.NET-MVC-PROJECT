@model IEnumerable<Product>
@{
    ViewData["Title"] = "Store";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var categories = (ViewBag.Categories as List<string>) ?? new List<string>();
    string selectedCategory = ViewBag.SelectedCategory as string;
    string searchString = ViewBag.SearchString as string;
    string priceSort = ViewBag.PriceSort as string;
}
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
<link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap" rel="stylesheet">

<h2 class="text-center my-5 fw-bold text-primary">Store</h2>

<form method="get" id="filterForm" class="mb-4">
    <div class="row g-3 align-items-center">
        <div class="col-md-4 position-relative">
            <div class="input-group">
                <span class="input-group-text bg-primary text-white"><i class="fas fa-search"></i></span>
                <input type="text" name="searchString" id="searchInput" class="form-control rounded-pill shadow-sm"
                       placeholder="Search products..." value="@searchString" />
            </div>
        </div>
        <div class="col-md-3">
            <select name="category" id="categorySelect" class="form-select rounded-pill shadow-sm">
                <option value="">All Categories</option>
                @foreach (var cat in categories)
                {
                    <option value="@cat" selected="@(cat == selectedCategory ? "selected" : null)">@cat</option>
                }
            </select>
        </div>
        <div class="col-md-3">
            <select name="priceSort" id="priceSortSelect" class="form-select rounded-pill shadow-sm">
                <option value="">Sort by Price</option>
                <option value="asc" selected="@(priceSort == "asc" ? "selected" : null)">Price: Low to High</option>
                <option value="desc" selected="@(priceSort == "desc" ? "selected" : null)">Price: High to Low</option>
            </select>
        </div>
        <div class="col-md-2">
            <button type="submit" class="btn btn-primary w-100 rounded-pill shadow-sm">Search</button>
        </div>
    </div>
</form>

<div class="container">
    <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
        @foreach (var product in Model)
        {
            var quantityClass = product.Quantity <= 20 ? "bg-danger" :
            product.Quantity <= 42 ? "bg-warning" :
            "bg-success";

            <div class="col">
                <div class="card h-100 shadow-sm border-0 rounded-3 transform-hover">
                    @if (!string.IsNullOrEmpty(product.ImageFileName))
                    {
                        <img src="~/products/@product.ImageFileName" class="card-img-top rounded-3" alt="@product.Name"
                             style="object-fit: cover; height: 200px;" />
                    }
                    else
                    {
                        <img src="~/images/placeholder.png" class="card-img-top rounded-3" alt="No image available"
                             style="object-fit: cover; height: 200px;" />
                    }
                    <div class="card-body d-flex flex-column">
                        <h5 class="card-title fw-bold text-primary">@product.Name</h5>
                        <p class="card-text"><strong>Brand:</strong> @product.Brand</p>
                        <p class="card-text"><strong>Category:</strong> @product.Category</p>
                        <p class="card-text"><strong>Price:</strong> <span class="text-success fw-bold">$@product.Price</span></p>

                        <p class="card-text">
                            <strong>Quantity:</strong>
                            <span class="badge @quantityClass">@product.Quantity</span>
                        </p>

                        <button class="btn favorite-btn btn-outline-danger rounded-pill" id="favorite-btn-@product.Id" data-product-id="@product.Id">
                            <i class="fas fa-heart"></i> Add to Favorites
                        </button>

                        <div class="mt-auto">
                            <a asp-controller="ProductDetails" asp-action="Index" asp-route-id="@product.Id"
                               class="btn btn-outline-secondary me-2 rounded-pill"><i class="fas fa-info-circle"></i> Details</a>
                            @if (product.Quantity > 0)
                            {
                                <a asp-controller="Order" asp-action="Checkout" asp-route-productId="@product.Id"
                                   class="btn btn-primary rounded-pill">
                                    <i class="fas fa-shopping-cart"></i> Buy Now
                                </a>
                            }
                            else
                            {
                                <button class="btn btn-secondary rounded-pill" disabled>Out of Stock</button>
                            }
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<div id="toast-notification" class="toast align-items-center text-white bg-success border-0 position-fixed bottom-0 end-0 m-3" role="alert" aria-live="assertive" aria-atomic="true">
    <div class="d-flex">
        <div class="toast-body">The product was successfully added!</div>
        <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
    </div>
</div>

<div id="cart-toast-notification" class="toast align-items-center text-white bg-primary border-0 position-fixed bottom-0 end-0 m-3" role="alert" aria-live="assertive" aria-atomic="true">
    <div class="d-flex">
        <div class="toast-body">Product added to cart successfully!</div>
        <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var form = document.getElementById('filterForm');
            var categorySelect = document.getElementById('categorySelect');
            var priceSortSelect = document.getElementById('priceSortSelect');
            categorySelect.addEventListener('change', function () {
                form.submit();
            });
            priceSortSelect.addEventListener('change', function () {
                form.submit();
            });
        });
    </script>
}

<style>
    :root {
        --bg-light: #f8f9fa;
        --bg-dark: #121212;
        --card-light: white;
        --card-dark: #1c1c1c;
        --text-light: #333;
        --text-dark: #f8f9fa;
        --primary-light: #007bff;
        --primary-dark: #00c8ff;
        --border-light: #ddd;
        --border-dark: #444;
    }

    .favorite-btn {
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 10px 15px;
        border-radius: 50px; 
        transition: background-color 0.3s, color 0.3s, transform 0.3s;
        font-weight: 500;
    }

    .favorite-btn i {
        margin-right: 5px;
    }

    .favorite-btn:hover {
        background-color: #ff6b6b; 
        color: white; 
        transform: scale(1.05); 
    }

    body {
        background-color: var(--bg-light);
        color: var(--text-light);
        transition: all 0.3s ease-in-out;
        font-family: 'Roboto', sans-serif;
    }

    media (prefers-color-scheme: dark) {
        body {
            background-color: var(--bg-dark);
            color: var(--text-dark);
        }

        .card {
            background: var(--card-dark);
            border: 1px solid var(--border-dark);
        }

        .btn-primary {
            background: var(--primary-dark);
            border-color: var(--primary-dark);
        }

        .btn-outline-secondary {
            color: var(--primary-dark);
            border-color: var(--primary-dark);
        }

        .btn-outline-secondary:hover {
            background: var(--primary-dark);
            color: white;
        }
    }

    .input-group-text {
        border-radius: 50px 0 0 50px;
    }

    .form-control {
        border-radius: 50px;
        transition: 0.2s;
    }

    .form-control:focus {
        box-shadow: 0 0 10px var(--primary-light);
        border-color: var(--primary-light);
    }

    .btn-primary {
        border-radius: 50px;
        transition: 0.2s;
    }

    .btn-primary:hover {
        box-shadow: 0 0 10px var(--primary-light);
    }


    .card {
        border-radius: 15px;
        transition: 0.3s;
    }

    .card:hover {
        transform: scale(1.02);
        box-shadow: 0px 5px 20px rgba(0, 0, 0, 0.15);
    }

    .badge {
        font-size: 14px;
        padding: 5px 10px;
    }

    .bg-danger {
        background-color: #dc3545 !important;
    }

    .bg-warning {
        background-color: #ffc107 !important;
        color: black !important;
    }

    .bg-success {
        background-color: #28a745 !important;
    }
</style>


<script>  
document.addEventListener('DOMContentLoaded', function () {
        document.querySelectorAll(".favorite-btn").forEach(button => {
            let productId = button.getAttribute("data-product-id");

            fetch(`/Favorites/IsFavorite/${productId}`)
                .then(response => response.json())
                .then(data => {
                    if (data.isFavorite) {
                        button.innerHTML = '<i class="fas fa-heart"></i> Already Added';
                        button.classList.add("btn-success");
                        button.classList.remove("btn-outline-danger");
                    } else {
                        button.innerHTML = '<i class="fas fa-heart"></i> Add to Favorites';
                        button.classList.add("btn-outline-danger");
                    }
                });


            button.addEventListener("click", function () {
                fetch(`/Favorites/AddToFavorites`, {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify({ productId: parseInt(productId) })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        button.innerHTML = '<i class="fas fa-heart"></i> Already Added';
                        button.classList.add("btn-success");
                        button.classList.remove("btn-outline-danger");

                        let toast = new bootstrap.Toast(document.getElementById('toast-notification'));
                        toast.show();
                    } else {
                        alert(data.message);
                    }
                })
                .catch(error => console.error("Error:", error));
            });
        });
    });

         document.addEventListener('DOMContentLoaded', function () {
            document.querySelectorAll(".add-to-cart-btn").forEach(button => {
                button.addEventListener("click", function () {
                    let productId = this.getAttribute("data-product-id");
                    let productName = this.getAttribute("data-product-name");
                    let productPrice = this.getAttribute("data-product-price");
                    let productImage = this.getAttribute("data-product-image");

                    fetch(`/Cart/AddToCart`, {
                        method: "POST",
                        headers: { "Content-Type": "application/json" },
                        body: JSON.stringify({
                            productId: parseInt(productId),
                            name: productName,
                            price: parseFloat(productPrice),
                            imageFileName: productImage
                        })
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            let toast = new bootstrap.Toast(document.getElementById('cart-toast-notification'));
                            toast.show();
                        } else {
                            alert(data.message);
                        }
                    })
                    .catch(error => console.error("Error:", error));
                });
            });
        });
</script>
