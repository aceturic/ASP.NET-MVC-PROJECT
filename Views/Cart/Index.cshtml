@model UsersApp.ViewModels.CartViewModel

@{
    ViewBag.Title = "Количка";
}

<div class="container py-5">
    <h2 class="mb-4 fw-light display-5">🛒 Твоята количка</h2>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">


    @if (!Model.Items.Any())
    {
        <div class="alert alert-info rounded-4 shadow-sm d-flex align-items-center" role="alert">
            <i class="fas fa-shopping-cart me-3 fs-4"></i>
            <div class="h5 mb-0">Вашата количка е празна</div>
        </div>
    }
    else
    {
        <form asp-action="UpdateCart" method="post">
            <div class="cart-items mb-5">
                @foreach (var item in Model.Items)
                {
                    <div class="card mb-3 border-0 shadow-hover rounded-4 overflow-hidden">
                        <div class="card-body p-4">
                            <div class="row g-4 align-items-center">
                                <div class="col-md-2">
                                    <div class="ratio ratio-1x1 bg-body-secondary rounded-3">
                                        <img src="~/products/@item.ImageFileName"
                                             alt="@item.ProductName"
                                             class="img-fluid object-fit-cover rounded-3 p-1 bg-white">
                                    </div>
                                </div>

                                <div class="col-md-4">
                                    <h3 class="h5 mb-2">@item.ProductName</h3>
                                    <div class="text-muted">Единична цена: @item.Price лв.</div>
                                </div>
                                
                                <div class="col-md-3">
                                    <div class="d-flex align-items-center gap-2">
                                        <input type="number" 
                                               name="Quantities[@item.ProductId]" 
                                               value="@item.Quantity" 
                                               class="form-control form-control-lg w-25" 
                                               min="1">
                                        <div class="text-nowrap">
                                            x @item.Price лв.
                                        </div>
                                    </div>
                                    <a href="javascript:void(0);" onclick="removeOneProduct(@item.ProductId)"
                                       class="btn btn-link text-danger p-2">
                                        <i class="fas fa-minus-circle"></i>
                                    </a>

                                </div>
                                
                                <div class="col-md-3 text-end">
                                    <div class="d-flex justify-content-end align-items-center gap-3">
                                        <div class="h5 mb-0 text-success">
                                            @item.TotalPrice лв.
                                        </div>
                                        <a href="@Url.Action("RemoveFromCart", "Cart", new { id = item.ProductId })" 
                                           class="btn btn-link text-danger p-2">
                                            <i class="fas fa-trash-alt"></i>
                                        </a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>

            <div class="cart-summary rounded-4 p-4 shadow-sm bg-body-tertiary">
                <div class="row align-items-center">
                    <div class="col-md-6 mb-3 mb-md-0">
                        <h4 class="mb-0 fw-light">
                            Обща сума: 
                            <span class="fw-bold text-body-emphasis">@Model.GrandTotal лв.</span>
                        </h4>
                    </div>
                    
                    <div class="col-md-6 d-flex gap-3 justify-content-end">
                        <button type="submit" class="btn btn-primary px-4 py-3 rounded-pill">
                            <i class="fas fa-sync me-2"></i>Обнови количка
                        </button>
                        <a href="@Url.Action("ClearCart", "Cart")" 
                           class="btn btn-outline-danger px-4 py-3 rounded-pill">
                            <i class="fas fa-eraser me-2"></i>Изчисти
                        </a>
                        <a href="@Url.Action("Checkout", "Order")" 
                           class="btn btn-success px-4 py-3 rounded-pill">
                            <i class="fas fa-credit-card me-2"></i>Поръчай
                        </a>
                    </div>
                </div>
            </div>
        </form>
    }
</div>

<style>
    .shadow-hover {
        transition: transform 0.2s, box-shadow 0.2s;
    }
    
    .shadow-hover:hover {
        transform: translateY(-2px);
        box-shadow: 0 10px 20px rgba(0,0,0,0.08);
    }
    
    .object-fit-cover {
        object-fit: cover;
    }
    
    .btn.rounded-pill {
        padding-left: 1.5rem;
        padding-right: 1.5rem;
    }

    media (prefers-color-scheme: dark) {
        .cart-summary {
            background-color: var(--bs-dark-bg-subtle) !important;
            border: 1px solid var(--bs-border-color);
        }
        
        .text-body-emphasis {
            color: var(--bs-success-text-emphasis) !important;
        }
        
        .card {
            background-color: var(--bs-body-bg);
        }
        
        .bg-light {
            background-color: var(--bs-secondary-bg) !important;
        }
        
        .text-muted {
            color: var(--bs-secondary-color) !important;
        }
    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const form = document.getElementById('cartForm');
        const loadingOverlay = document.getElementById('loadingOverlay');

        async function updateCart() {
            try {
                loadingOverlay.classList.remove('d-none');
                const formData = new FormData(form);

                const response = await fetch(form.action, {
                    method: 'POST',
                    body: formData
                });

                if (!response.ok) throw new Error('Network error');
                const result = await response.json();

                // Update totals
                document.querySelectorAll('[data-item-total]').forEach(el => {
                    el.textContent = `${result.items[el.dataset.itemId].totalPrice} лв.`;
                });
                document.querySelector('[data-grand-total]').textContent = `${result.grandTotal} лв.`;

            } catch (error) {
                console.error('Error:', error);
                alert('Възникна грешка при актуализацията на количката');
            } finally {
                loadingOverlay.classList.add('d-none');
            }
        }

        // Add event listeners
        document.querySelectorAll('input[type="number"][name^="Quantities"]').forEach(input => {
            input.addEventListener('change', debounce(updateCart, 500));
        });

        // Debounce function
        function debounce(func, timeout = 300) {
            let timer;
            return (...args) => {
                clearTimeout(timer);
                timer = setTimeout(() => { func.apply(this, args); }, timeout);
            };
        }
    });

        function removeOneProduct(productId) {
        // Build the URL for the RemoveFromCart action with the product id as query parameter.
        const url = '@Url.Action("RemoveFromCart", "Cart")' + '?id=' + productId;
        fetch(url, { method: 'GET' })
            .then(response => {
                // Since the controller returns a redirect, we reload the page.
                window.location.reload();
            })
            .catch(error => console.error("Error removing product:", error));
    }
</script>